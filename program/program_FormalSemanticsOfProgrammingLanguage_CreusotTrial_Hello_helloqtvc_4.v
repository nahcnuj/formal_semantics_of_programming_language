(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require int.Int.
Require int.Abs.
Require int.ComputerDivision.

(* Why3 assumption *)
Inductive ref (a:Type) :=
  | ref'mk : a -> ref a.
Axiom ref_WhyType : forall (a:Type) {a_WT:WhyType a}, WhyType (ref a).
Existing Instance ref_WhyType.
Arguments ref'mk {a}.

(* Why3 assumption *)
Definition contents {a:Type} {a_WT:WhyType a} (v:ref a) : a :=
  match v with
  | ref'mk x => x
  end.

Axiom int32 : Type.
Parameter int32_WhyType : WhyType int32.
Existing Instance int32_WhyType.

Parameter int32'int: int32 -> Numbers.BinNums.Z.

Axiom int32'axiom :
  forall (i:int32),
  ((-2147483648%Z)%Z <= (int32'int i))%Z /\ ((int32'int i) <= 2147483647%Z)%Z.

(* Why3 assumption *)
Definition in_bounds (n:Numbers.BinNums.Z) : Prop :=
  ((-2147483648%Z)%Z <= n)%Z /\ (n <= 2147483647%Z)%Z.

Axiom to_int_in_bounds : forall (n:int32), in_bounds (int32'int n).

Axiom extensionality :
  forall (x:int32) (y:int32), ((int32'int x) = (int32'int y)) -> (x = y).

(* Why3 assumption *)
Inductive borrowed (a:Type) :=
  | borrowed'mk : a -> a -> borrowed a.
Axiom borrowed_WhyType : forall (a:Type) {a_WT:WhyType a},
  WhyType (borrowed a).
Existing Instance borrowed_WhyType.
Arguments borrowed'mk {a}.

(* Why3 assumption *)
Definition current {a:Type} {a_WT:WhyType a} (v:borrowed a) : a :=
  match v with
  | borrowed'mk x x1 => x
  end.

(* Why3 assumption *)
Definition final {a:Type} {a_WT:WhyType a} (v:borrowed a) : a :=
  match v with
  | borrowed'mk x x1 => x1
  end.

(* Why3 assumption *)
Definition resolve (self:borrowed int32) : Prop :=
  ((final self) = (current self)).

Parameter a: borrowed int32.

Parameter b: borrowed int32.

Parameter rliteral: int32.

Axiom rliteral_axiom : ((int32'int rliteral) = 0%Z).

Axiom Assume : resolve (borrowed'mk rliteral (final a)).

Parameter rliteral1: int32.

Axiom rliteral_axiom1 : ((int32'int rliteral1) = 1%Z).

Axiom Assume1 : resolve (borrowed'mk rliteral1 (final b)).

Parameter us0: int32.

Axiom Ensures :
  ((int32'int us0) =
   ((int32'int (current (borrowed'mk rliteral (final a)))) +
    (int32'int (current (borrowed'mk rliteral1 (final b)))))%Z).

(* Why3 goal *)
Theorem hello'vc : (us0 = rliteral1).
Proof.
apply extensionality.
rewrite Ensures. simpl.
rewrite rliteral_axiom.
rewrite rliteral_axiom1.
simpl.
trivial.
Qed.

